AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  form-submission deployment template
Parameters:
  ApiStage:
    Description: Form submission API stage
    Type: String
    Default: prod
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Resources:
  Proxy:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: "Cloudfront distribution for serverless website"
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        # List of origins that Cloudfront will connect to
        Origins:
          - Id: s3-frontend
            DomainName: !GetAtt FrontendBucket.DomainName
            S3OriginConfig:
              # Restricting Bucket access through an origin access identity
              OriginAccessIdentity: 
                Fn::Sub: 'origin-access-identity/cloudfront/${ProxyFrontendBucketAccess}'
          - Id: api-gateway
            DomainName: !Sub "${FormSubmissionApi}.execute-api.${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              HTTPPort: '80'
              HTTPSPort: '443'
              OriginKeepaliveTimeout: '20'
              OriginReadTimeout: '20'
              OriginProtocolPolicy: http-only
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
        # To connect the CDN to the origins you need to specify behaviours
        DefaultCacheBehavior:
          # Compress resources automatically ( gzip )
          Compress: 'true'
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3-frontend
          ViewerProtocolPolicy : redirect-to-https
        CacheBehaviors:
        - AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: api-gateway
          ForwardedValues:
            QueryString: 'true'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
          MinTTL: '0'
          MaxTTL: '0'
          DefaultTTL: '0'
          PathPattern: !Sub "/${ApiStage}/*"
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: "/index.html"
          ResponseCode: '200'
          ErrorCachingMinTTL: '30'
  ProxyFrontendBucketAccess:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Form submission frontend access'

  FrontendBucket:
    Type: AWS::S3::Bucket
    # Properties:
      # Change bucket name to reflect your website
     # BucketName: <YOURSWEBSITE.COM>

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
      # Restricting access to cloudfront only.
        Statement:
          -
            Effect: Allow
            Action: 's3:GetObject'
            Resource:
              - !Sub "arn:aws:s3:::${FrontendBucket}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${ProxyFrontendBucketAccess}"

  FormSubmissionApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref ApiStage
      EndpointConfiguration: REGIONAL
      
  FormSubmissionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: service/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        FormSubmissionApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /submit
            Method: get
            RestApiId: !Ref FormSubmissionApi
  

Outputs:
  FormSubmissionFrontendBucket:
    Description: "Form submission frontend bucket"
    Value: !GetAtt FrontendBucket.DomainName
  FormSubmissionApi:
    Description: "API Gateway endpoint URL for Form Submission function"
    Value: !Sub "https://${FormSubmissionApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStage}/submit"
  FormSubmissionFunction:
    Description: "Form Submission Lambda Function ARN"
    Value: !GetAtt FormSubmissionFunction.Arn
  FormSubmissionFunctionIamRole:
    Description: "Implicit IAM Role created for Form Submission function"
    Value: !GetAtt FormSubmissionFunctionRole.Arn
